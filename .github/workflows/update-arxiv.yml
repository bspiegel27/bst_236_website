name: Update ArXiv Cache

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch: {}
  push:
    branches:
      - main

permissions:
  contents: write
  
jobs:
  update-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet jq

      - name: Create data directory
        run: mkdir -p data
      
      - name: Fetch ArXiv Data
        id: fetch-data
        run: |
          # Fetch XML from ArXiv
          curl -s "https://export.arxiv.org/api/query?search_query=all:causal+inference&sortBy=submittedDate&sortOrder=descending&start=0&max_results=10" > arxiv.xml
          
          # Convert XML to JSON with proper escaping
          papers=$(xmlstarlet sel -N atom="http://www.w3.org/2005/Atom" -t -m "//atom:entry" \
            -v "concat('{\"title\":\"', translate(normalize-space(atom:title), '\"', '\\\\\\\\\\\\\\\\"'), '\",')" \
            -v "concat('\"authors\":\"', string-join(atom:author/atom:name, ', '), '\",')" \
            -v "concat('\"abstract\":\"', translate(normalize-space(atom:summary), '\"', '\\\\\\\\\\\\\\\\"'), '\",')" \
            -v "concat('\"published\":\"', atom:published, '\",')" \
            -v "concat('\"link\":\"', atom:id, '\"}')" \
            -n arxiv.xml | sed ':a;N;$!ba;s/\n/,/g')
          
          # Create final JSON
          echo "{
            \"lastUpdate\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",
            \"papers\": [$papers]
          }" | jq '.' > data/arxiv-cache.json
          
          # Verify content
          cat data/arxiv-cache.json

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add data/arxiv-cache.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update ArXiv cache"
            git push origin main
          fi
